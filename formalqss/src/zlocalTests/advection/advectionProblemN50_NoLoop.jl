using formalA2
#using formalqssA
#using BenchmarkTools
#using Plots
#using OrdinaryDiffEq

include("/home/unknown/models/Advection.jl")
function test()
    odeprob = @NLodeProblemLoop begin
        u = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    discrete = [0.0]
    du[1] = -120.0 * u[1] + 10.0 * u[2] + 1000.0 * u[1] * u[1] * (1.0 - u[1])
    du[49] = ((10.0 * u[50] + 120.0 * u[48]) - 120.0 * u[49]) + 1000.0 * u[49] * u[49] * (1.0 - u[49])
    du[50] = (120.0 * u[49] - 120.0 * u[50]) + 1000.0 * u[50] * u[50] * (1.0 - u[50])
    du[2] = ((10.0 * u[3] + 120.0 * u[1]) - 120.0 * u[2]) + 1000.0 * u[2] * u[2] * (1.0 - u[2])
    du[3] = ((10.0 * u[4] + 120.0 * u[2]) - 120.0 * u[3]) + 1000.0 * u[3] * u[3] * (1.0 - u[3])
    du[4] = ((10.0 * u[5] + 120.0 * u[3]) - 120.0 * u[4]) + 1000.0 * u[4] * u[4] * (1.0 - u[4])
    du[5] = ((10.0 * u[6] + 120.0 * u[4]) - 120.0 * u[5]) + 1000.0 * u[5] * u[5] * (1.0 - u[5])
    du[6] = ((10.0 * u[7] + 120.0 * u[5]) - 120.0 * u[6]) + 1000.0 * u[6] * u[6] * (1.0 - u[6])
    du[7] = ((10.0 * u[8] + 120.0 * u[6]) - 120.0 * u[7]) + 1000.0 * u[7] * u[7] * (1.0 - u[7])
    du[8] = ((10.0 * u[9] + 120.0 * u[7]) - 120.0 * u[8]) + 1000.0 * u[8] * u[8] * (1.0 - u[8])
    du[9] = ((10.0 * u[10] + 120.0 * u[8]) - 120.0 * u[9]) + 1000.0 * u[9] * u[9] * (1.0 - u[9])
    du[10] = ((10.0 * u[11] + 120.0 * u[9]) - 120.0 * u[10]) + 1000.0 * u[10] * u[10] * (1.0 - u[10])
    du[11] = ((10.0 * u[12] + 120.0 * u[10]) - 120.0 * u[11]) + 1000.0 * u[11] * u[11] * (1.0 - u[11])
    du[12] = ((10.0 * u[13] + 120.0 * u[11]) - 120.0 * u[12]) + 1000.0 * u[12] * u[12] * (1.0 - u[12])
    du[13] = ((10.0 * u[14] + 120.0 * u[12]) - 120.0 * u[13]) + 1000.0 * u[13] * u[13] * (1.0 - u[13])
    du[14] = ((10.0 * u[15] + 120.0 * u[13]) - 120.0 * u[14]) + 1000.0 * u[14] * u[14] * (1.0 - u[14])
    du[15] = ((10.0 * u[16] + 120.0 * u[14]) - 120.0 * u[15]) + 1000.0 * u[15] * u[15] * (1.0 - u[15])
    du[16] = ((10.0 * u[17] + 120.0 * u[15]) - 120.0 * u[16]) + 1000.0 * u[16] * u[16] * (1.0 - u[16])
    du[17] = ((10.0 * u[18] + 120.0 * u[16]) - 120.0 * u[17]) + 1000.0 * u[17] * u[17] * (1.0 - u[17])
    du[18] = ((10.0 * u[19] + 120.0 * u[17]) - 120.0 * u[18]) + 1000.0 * u[18] * u[18] * (1.0 - u[18])
    du[19] = ((10.0 * u[20] + 120.0 * u[18]) - 120.0 * u[19]) + 1000.0 * u[19] * u[19] * (1.0 - u[19])
    du[20] = ((10.0 * u[21] + 120.0 * u[19]) - 120.0 * u[20]) + 1000.0 * u[20] * u[20] * (1.0 - u[20])
    du[21] = ((10.0 * u[22] + 120.0 * u[20]) - 120.0 * u[21]) + 1000.0 * u[21] * u[21] * (1.0 - u[21])
    du[22] = ((10.0 * u[23] + 120.0 * u[21]) - 120.0 * u[22]) + 1000.0 * u[22] * u[22] * (1.0 - u[22])
    du[23] = ((10.0 * u[24] + 120.0 * u[22]) - 120.0 * u[23]) + 1000.0 * u[23] * u[23] * (1.0 - u[23])
    du[24] = ((10.0 * u[25] + 120.0 * u[23]) - 120.0 * u[24]) + 1000.0 * u[24] * u[24] * (1.0 - u[24])
    du[25] = ((10.0 * u[26] + 120.0 * u[24]) - 120.0 * u[25]) + 1000.0 * u[25] * u[25] * (1.0 - u[25])
    du[26] = ((10.0 * u[27] + 120.0 * u[25]) - 120.0 * u[26]) + 1000.0 * u[26] * u[26] * (1.0 - u[26])
    du[27] = ((10.0 * u[28] + 120.0 * u[26]) - 120.0 * u[27]) + 1000.0 * u[27] * u[27] * (1.0 - u[27])
    du[28] = ((10.0 * u[29] + 120.0 * u[27]) - 120.0 * u[28]) + 1000.0 * u[28] * u[28] * (1.0 - u[28])
    du[29] = ((10.0 * u[30] + 120.0 * u[28]) - 120.0 * u[29]) + 1000.0 * u[29] * u[29] * (1.0 - u[29])
    du[30] = ((10.0 * u[31] + 120.0 * u[29]) - 120.0 * u[30]) + 1000.0 * u[30] * u[30] * (1.0 - u[30])
    du[31] = ((10.0 * u[32] + 120.0 * u[30]) - 120.0 * u[31]) + 1000.0 * u[31] * u[31] * (1.0 - u[31])
    du[32] = ((10.0 * u[33] + 120.0 * u[31]) - 120.0 * u[32]) + 1000.0 * u[32] * u[32] * (1.0 - u[32])
    du[33] = ((10.0 * u[34] + 120.0 * u[32]) - 120.0 * u[33]) + 1000.0 * u[33] * u[33] * (1.0 - u[33])
    du[34] = ((10.0 * u[35] + 120.0 * u[33]) - 120.0 * u[34]) + 1000.0 * u[34] * u[34] * (1.0 - u[34])
    du[35] = ((10.0 * u[36] + 120.0 * u[34]) - 120.0 * u[35]) + 1000.0 * u[35] * u[35] * (1.0 - u[35])
    du[36] = ((10.0 * u[37] + 120.0 * u[35]) - 120.0 * u[36]) + 1000.0 * u[36] * u[36] * (1.0 - u[36])
    du[37] = ((10.0 * u[38] + 120.0 * u[36]) - 120.0 * u[37]) + 1000.0 * u[37] * u[37] * (1.0 - u[37])
    du[38] = ((10.0 * u[39] + 120.0 * u[37]) - 120.0 * u[38]) + 1000.0 * u[38] * u[38] * (1.0 - u[38])
    du[39] = ((10.0 * u[40] + 120.0 * u[38]) - 120.0 * u[39]) + 1000.0 * u[39] * u[39] * (1.0 - u[39])
    du[40] = ((10.0 * u[41] + 120.0 * u[39]) - 120.0 * u[40]) + 1000.0 * u[40] * u[40] * (1.0 - u[40])
    du[41] = ((10.0 * u[42] + 120.0 * u[40]) - 120.0 * u[41]) + 1000.0 * u[41] * u[41] * (1.0 - u[41])
    du[42] = ((10.0 * u[43] + 120.0 * u[41]) - 120.0 * u[42]) + 1000.0 * u[42] * u[42] * (1.0 - u[42])
    du[43] = ((10.0 * u[44] + 120.0 * u[42]) - 120.0 * u[43]) + 1000.0 * u[43] * u[43] * (1.0 - u[43])
    du[44] = ((10.0 * u[45] + 120.0 * u[43]) - 120.0 * u[44]) + 1000.0 * u[44] * u[44] * (1.0 - u[44])
    du[45] = ((10.0 * u[46] + 120.0 * u[44]) - 120.0 * u[45]) + 1000.0 * u[45] * u[45] * (1.0 - u[45])
    du[46] = ((10.0 * u[47] + 120.0 * u[45]) - 120.0 * u[46]) + 1000.0 * u[46] * u[46] * (1.0 - u[46])
    du[47] = ((10.0 * u[48] + 120.0 * u[46]) - 120.0 * u[47]) + 1000.0 * u[47] * u[47] * (1.0 - u[47])
    du[48] = ((10.0 * u[49] + 120.0 * u[47]) - 120.0 * u[48]) + 1000.0 * u[48] * u[48] * (1.0 - u[48])
end

   # solmliqss2=QSS_Solve(odeprob,10.0,mliqss2(),saveat(0.1),0.0,1e-6,1e-3)
  #  solmliqss2=QSS_Solve_from_model(N50,odeprob,10.0,mliqss2(),saveat(0.1),0.0,1e-6,1e-3)
   # solliqss2=QSS_Solve_from_model(twoVarSys14,odeprob,10.0,qss3(),saveat(0.1),0.0,1e-6,1e-3)
  # save_SolVar(solmliqss2,1000)
   #save_SolVar(solmliqss2,400,600,800,1000)
  # save_Sol(solmliqss2,3,10,5,6)
 #  save_SolVar(solmliqss2,1000)
# save_Sol(solliqss3)
end
#@time
 test()
