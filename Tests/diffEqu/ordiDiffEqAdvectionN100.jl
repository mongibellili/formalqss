using OrdinaryDiffEq

using Plots

function odeDiffEquPackage()
 
    function funcName(du,u,p,t)# 


    
        du[1] = -120.0*u[1]+10.0*u[2]+1000.0*u[1]*u[1]*(1.0-u[1]) 
         
        for i in 2:99  
            du[i]=10.0*u[i+1]+110.0*u[i-1]-120.0*u[i]+1000.0*u[i]*u[i]*(1.0-u[i]) ;
       end 

        du[100]=120.0*u[99]-120.0*u[100]+1000.0*u[100]*u[100]*(1.0-u[100]) 
        
    

    
    end
    tspan = (0.0,10.0)
    u0= [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    prob = ODEProblem(funcName,u0,tspan)

     sol = solve(prob,Feagin14(),saveat=0.01,abstol = 1e-12, reltol = 1e-7)
  
   


   #= p1=plot!(sol,marker=(:circle),markersize=2,xlims=(0.0,10.0),ylims=(0.99995,1.00002),legend = false)
  savefig(p1, "plot_adrN100_bs3_1e-5.png") =#

end
#@time 
odeDiffEquPackage()  

